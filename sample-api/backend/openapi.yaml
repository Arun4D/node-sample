openapi: 3.0.0
info:
  title: Student API
  description: Simple API to manage student records
  version: 1.0.0

servers:
  - url: http://localhost:4000/api

paths:
  /student:
    get:
      summary: Get all students
      description: Retrieve a list of all students.
      responses:
        '200':
          description: A list of students.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
    post:
      summary: Add a new student
      description: Create a new student.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewStudent'
      responses:
        '201':
          description: Student created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '400':
          description: Invalid input.

  /student/{id}:
    get:
      summary: Get a student by ID
      description: Retrieve a specific student by their ID.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the student to retrieve.
          schema:
            type: integer
      responses:
        '200':
          description: A student object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '404':
          description: Student not found.
    put:
      summary: Update a student by ID
      description: Update the information of an existing student.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the student to update.
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStudent'
      responses:
        '200':
          description: Student updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '404':
          description: Student not found.
    delete:
      summary: Delete a student by ID
      description: Delete a specific student by their ID.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the student to delete.
          schema:
            type: integer
      responses:
        '204':
          description: Student deleted successfully.
        '404':
          description: Student not found.

components:
  schemas:
    Student:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: John Doe
        age:
          type: integer
          example: 20
        email:
          type: string
          example: student@gmail.com
    NewStudent:
      type: object
      required:
        - name
        - age
        - email
      properties:
        name:
          type: string
          example: John Doe
        age:
          type: integer
          example: 20
        email:
          type: string
          example: student@gmail.com
    UpdateStudent:
      type: object
      properties:
        name:
          type: string
          example: John Doe
        age:
          type: integer
          example: 20
        email:
          type: string
          example: student@gmail.com
